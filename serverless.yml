service: hb-api

# You can pin your service to only deploy with a specific Serverless version
# Check out our docs for more details
# frameworkVersion: "=X.X.X"

provider:
  name: aws
  runtime: java8

  environment:
    TABLE_PREFIX: ${self:custom.tablePrefix}

  usagePlan:
    quota:
      limit: 30000
      period: DAY
    throttle:
      burstLimit: 20
      rateLimit: 10

  stage: ${opt:stage, 'dev'}
#  region: us-east-1
  iamRoleStatements:
    - Effect: "Allow"
      Action:
        - "dynamodb:*"
        - "SNS:Publish"
        - "SNS:ListTopics"
      Resource: "*"

package:
  artifact: target/${self:service}-${self:provider.stage}.jar

functions:
  StatusGet:
    handler: com.tddapps.handlers.StatusGet
    timeout: 30
    events:
      - http:
          path: /v1/status
          method: get
  HeartBeatPost:
    handler: com.tddapps.handlers.HeartBeatPost
    timeout: 30
    events:
      - http:
          private: true
          path: /v1/hearbeat
          method: post
  NotificationCalculator:
    handler: com.tddapps.handlers.NotificationCalculator
    timeout: 300
    events:
    - schedule:
        rate: cron(* * * * ? *)
    environment:
      TOPIC_NAME: ${self:resources.Outputs.HeartBeatNotificationsTopicArn.Value}

plugins:
  - serverless-domain-manager
  - serverless-sam
  - serverless-dynamodb-local

custom:
  tablePrefix: ${self:service}-${self:provider.stage}-
  domainName: ${opt:domainName, 'hbapidev.tddapps.com'}
  customDomain:
    domainName: ${self:custom.domainName}
    stage: ${self:provider.stage}
    basePath: ''
    createRoute53Record: false

  dynamodb:
    stages:
    - dev
    start:
      inMemory: true
      migrate: true

resources:
  Resources:
    StatusGetLogGroup:
      Type: AWS::Logs::LogGroup
      Properties:
        RetentionInDays: "14"
    HeartBeatPostLogGroup:
      Type: AWS::Logs::LogGroup
      Properties:
        RetentionInDays: "14"
    NotificationCalculatorLogGroup:
      Type: AWS::Logs::LogGroup
      Properties:
        RetentionInDays: "14"

    HeartBeatsTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: ${self:custom.tablePrefix}heartbeats
        AttributeDefinitions:
          - AttributeName: host_id
            AttributeType: S
        KeySchema:
          - AttributeName: host_id
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1

    HeartBeatNotificationsTopic:
      Type: AWS::SNS::Topic
      Properties:
        DisplayName: ${self:custom.tablePrefix}heartbeat-notifications
        TopicName: ${self:custom.tablePrefix}heartbeat-notifications

  Outputs:
    HeartBeatNotificationsTopicArn:
      Value:
        Ref: HeartBeatNotificationsTopic